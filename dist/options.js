(()=>{"use strict";const e=("undefined"!=typeof chrome&&chrome.offscreen&&(chrome.offscreen.Reason.USER_MEDIA,chrome.offscreen.Reason.AUDIO_PLAYBACK),{OPENAI:{name:"OpenAI",baseUrl:"https://api.openai.com/v1",models:["gpt-4","gpt-4-turbo","gpt-3.5-turbo"],maxTokens:4096,rateLimits:{requestsPerMinute:60,tokensPerMinute:9e4,dailyLimit:1e6}},ANTHROPIC:{name:"Anthropic",baseUrl:"https://api.anthropic.com/v1",models:["claude-3-opus","claude-3-sonnet","claude-3-haiku"],maxTokens:4096,rateLimits:{requestsPerMinute:50,tokensPerMinute:4e4,dailyLimit:5e5}},GOOGLE:{name:"Google",baseUrl:"https://generativelanguage.googleapis.com/v1",models:["gemini-pro","gemini-pro-vision"],maxTokens:2048,rateLimits:{requestsPerMinute:60,tokensPerMinute:32e3,dailyLimit:1e6}}}),t=(e.OPENAI.baseUrl,e.OPENAI.rateLimits,e.ANTHROPIC.baseUrl,e.ANTHROPIC.rateLimits,{timeout:3e4,retryAttempts:3,retryDelay:1e3,enableLogging:!0});class n{config;handlers=new Map;pendingRequests=new Map;constructor(e={}){this.config={...t,...e},this.initializeMessageListener()}initializeMessageListener(){"undefined"!=typeof chrome&&chrome.runtime&&chrome.runtime.onMessage?chrome.runtime.onMessage.addListener(((e,t,n)=>(this.handleIncomingMessage(e,t,n).catch((e=>{console.error("Error handling incoming message:",e),n({success:!1,error:e instanceof Error?e.message:"Unknown error"})})),!0))):console.warn("Chrome extension APIs not available in this environment")}async handleIncomingMessage(e,t,n){const{command:o}=e;this.config.enableLogging&&console.log(`[MessageBroker] Received command: ${o}`,e);const s=this.handlers.get(o);if(s)try{await s(e,t,n)}catch(e){const t=e instanceof Error?e.message:"Unknown error";console.error(`Error in handler for command ${o}:`,e),n({success:!1,error:t})}else n({success:!1,error:"Unknown command",details:`No handler registered for command: ${o}`})}registerHandler(e,t){this.handlers.has(e)&&console.warn(`[MessageBroker] Overwriting existing handler for command: ${e}`),this.handlers.set(e,t),this.config.enableLogging&&console.log(`[MessageBroker] Registered handler for command: ${e}`)}unregisterHandler(e){const t=this.handlers.delete(e);return this.config.enableLogging&&t&&console.log(`[MessageBroker] Unregistered handler for command: ${e}`),t}async sendMessage(e,t){const n={...e,requestId:this.generateRequestId(),timestamp:Date.now()};return this.config.enableLogging&&console.log("[MessageBroker] Sending message:",n),this.sendMessageWithRetry(n,t,0)}async sendMessageWithRetry(e,t,n){try{return await this.sendSingleMessage(e,t)}catch(o){if(n<this.config.retryAttempts)return this.config.enableLogging&&console.warn(`[MessageBroker] Retry attempt ${n+1} for message:`,e.command),await this.delay(this.config.retryDelay*(n+1)),this.sendMessageWithRetry(e,t,n+1);throw o}}async sendSingleMessage(e,t){return new Promise(((n,o)=>{const s=setTimeout((()=>{o(new Error(`Message timeout after ${this.config.timeout}ms`))}),this.config.timeout),i=e=>{clearTimeout(s),chrome.runtime.lastError?o(new Error(chrome.runtime.lastError.message)):e?n(e):o(new Error("No response received"))};try{if("undefined"==typeof chrome||!chrome.runtime)return clearTimeout(s),void o(new Error("Chrome extension APIs not available"));t?chrome.tabs.sendMessage(t,e,i):chrome.runtime.sendMessage(e,i)}catch(e){clearTimeout(s),o(e)}}))}async sendMessageToTab(e,t){return this.sendMessage(t,e)}async sendCommand(e,t){const n={command:e,data:t,timestamp:Date.now()};return this.sendMessage(n)}async sendMessageToServiceWorker(e){return this.sendMessage({...e,target:"service_worker"})}async sendMessageToContentScript(e,t){return this.sendMessageToTab(e,{...t,target:"content_script"})}async broadcastMessage(e){try{const t=(await chrome.tabs.query({})).filter((e=>void 0!==e.id)).map((t=>this.sendMessageToTab(t.id,e).catch((()=>null))));return(await Promise.all(t)).filter((e=>null!==e))}catch(e){return console.error("Error broadcasting message:",e),[]}}generateRequestId(){return`${Date.now()}-${Math.random().toString(36).substr(2,9)}`}delay(e){return new Promise((t=>setTimeout(t,e)))}getRegisteredHandlers(){return Array.from(this.handlers.keys())}clearHandlers(){this.handlers.clear(),this.config.enableLogging&&console.log("[MessageBroker] All handlers cleared")}getStats(){return{handlersCount:this.handlers.size,pendingRequestsCount:this.pendingRequests.size}}}class o{messageBroker;state;constructor(){this.messageBroker=new n,this.state={isDirty:!1,isLoading:!1,currentProvider:"openai",apiKeys:{},configuration:{}},this.initializeEventListeners(),this.loadConfiguration()}initializeEventListeners(){this.initializeNavigation();const e=document.getElementById("save-api-keys");e&&e.addEventListener("click",this.saveApiKeys.bind(this));const t=document.getElementById("test-api-keys");t&&t.addEventListener("click",this.testAPIConnections.bind(this));const n=document.getElementById("save-context");n&&n.addEventListener("click",this.saveContext.bind(this));const o=document.getElementById("save-llm-config");o&&o.addEventListener("click",this.saveLlmConfiguration.bind(this));const s=document.getElementById("save-transcription");s&&s.addEventListener("click",this.saveTranscriptionSettings.bind(this));const i=document.getElementById("save-response-style");i&&i.addEventListener("click",this.saveResponseStyle.bind(this));const a=document.getElementById("save-language");a&&a.addEventListener("click",this.saveLanguageSettings.bind(this));const r=document.getElementById("test-microphone");r&&r.addEventListener("click",this.testMicrophone.bind(this));const c=document.getElementById("preview-style");c&&c.addEventListener("click",this.previewResponseStyle.bind(this));const l=document.getElementById("export-data");l&&l.addEventListener("click",this.exportData.bind(this));const d=document.getElementById("clear-data");d&&d.addEventListener("click",this.clearAllData.bind(this)),document.querySelectorAll('[id$="-calendar-connect"]').forEach((e=>{e.addEventListener("click",this.connectCalendar.bind(this))})),this.initializeDocumentUpload(),this.initializeLLMReordering()}initializeNavigation(){document.querySelectorAll(".ca-nav__button").forEach((e=>{e.addEventListener("click",(t=>{t.preventDefault();const n=e.getAttribute("data-section");n&&this.switchToSection(n)}))})),this.switchToSection("api-keys")}switchToSection(e){console.log(`🔄 Switching to section: ${e}`);const t=document.querySelectorAll(".ca-nav__button");console.log(`📍 Found ${t.length} navigation buttons`),t.forEach((e=>{e.classList.remove("ca-nav__button--active")}));const n=document.querySelector(`[data-section="${e}"]`);n?(n.classList.add("ca-nav__button--active"),console.log(`✅ Activated button for: ${e}`)):console.error(`❌ Button not found for section: ${e}`);const o=document.querySelectorAll(".ca-section");console.log(`📍 Found ${o.length} sections`),o.forEach((e=>{e.classList.remove("ca-section--active"),e.style.display="none"}));const s=document.querySelector(`#section-${e}`);if(s)s.classList.add("ca-section--active"),s.style.display="block",console.log(`✅ Showed section: section-${e}`);else{console.error(`❌ Section not found: section-${e}`);const t=document.querySelectorAll('[id^="section-"]');console.log("Available sections:",Array.from(t).map((e=>e.id)))}}async loadConfiguration(){try{this.state.isLoading=!0,this.updateLoadingState(!0);const e=await chrome.storage.sync.get();this.state.configuration=e,this.populateApiKeys(e.apiKeys||{}),this.populateLlmConfig(e.llmConfig||{}),this.populateTranscriptionSettings(e.transcription||{}),this.populateResponseStyle(e.responseStyle||{}),this.populateLanguageSettings(e.language||{})}catch(e){console.error("Error loading configuration:",e),this.showNotification("Failed to load configuration","error")}finally{this.state.isLoading=!1,this.updateLoadingState(!1)}}async saveApiKeys(){try{const e=this.collectApiKeys();await chrome.storage.sync.set({apiKeys:e}),this.state.apiKeys=e,this.showNotification("API keys saved successfully","success")}catch(e){console.error("Error saving API keys:",e),this.showNotification("Failed to save API keys","error")}}async testConnection(){try{this.updateLoadingState(!0);const e=await this.messageBroker.sendMessage({command:"TEST_LLM_CONNECTION",payload:{provider:this.state.currentProvider,apiKeys:this.state.apiKeys}});e.success?this.showNotification("Connection successful!","success"):this.showNotification("Connection failed: "+e.error,"error")}catch(e){console.error("Error testing connection:",e),this.showNotification("Connection test failed","error")}finally{this.updateLoadingState(!1)}}async saveContext(){try{const e=this.collectContextData();await chrome.storage.sync.set({context:e}),this.showNotification("Context saved successfully","success")}catch(e){console.error("Error saving context:",e),this.showNotification("Failed to save context","error")}}async saveLlmConfiguration(){try{const e=this.collectLlmConfig();await chrome.storage.sync.set({llmConfig:e}),this.showNotification("LLM configuration saved","success")}catch(e){console.error("Error saving LLM config:",e),this.showNotification("Failed to save LLM configuration","error")}}async saveTranscriptionSettings(){try{const e=this.collectTranscriptionSettings();await chrome.storage.sync.set({transcription:e}),this.showNotification("Transcription settings saved","success")}catch(e){console.error("Error saving transcription settings:",e),this.showNotification("Failed to save transcription settings","error")}}async saveResponseStyle(){try{const e=this.collectResponseStyle();await chrome.storage.sync.set({responseStyle:e}),this.showNotification("Response style saved","success")}catch(e){console.error("Error saving response style:",e),this.showNotification("Failed to save response style","error")}}async saveLanguageSettings(){try{const e=this.collectLanguageSettings();await chrome.storage.sync.set({language:e}),this.showNotification("Language settings saved","success")}catch(e){console.error("Error saving language settings:",e),this.showNotification("Failed to save language settings","error")}}async testMicrophone(){try{(await navigator.mediaDevices.getUserMedia({audio:!0})).getTracks().forEach((e=>e.stop())),this.showNotification("Microphone access granted","success")}catch(e){console.error("Microphone test failed:",e),this.showNotification("Microphone access denied","error")}}previewResponseStyle(){const e=this.collectResponseStyle(),t=this.generateStylePreview(e),n=document.getElementById("style-preview");n&&(n.innerHTML=t)}async exportData(){try{const e=await chrome.storage.sync.get(),t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=URL.createObjectURL(t),o=document.createElement("a");o.href=n,o.download=`candidai-settings-${(new Date).toISOString().split("T")[0]}.json`,o.click(),URL.revokeObjectURL(n),this.showNotification("Data exported successfully","success")}catch(e){console.error("Error exporting data:",e),this.showNotification("Failed to export data","error")}}async clearAllData(){if(confirm("Are you sure you want to clear all data? This cannot be undone."))try{await chrome.storage.sync.clear(),await chrome.storage.local.clear(),this.showNotification("All data cleared","success"),location.reload()}catch(e){console.error("Error clearing data:",e),this.showNotification("Failed to clear data","error")}}connectCalendar(e){const t=e.target.id.replace("-calendar-connect","");console.log(`Connecting ${t} calendar`),this.showNotification(`${t} calendar connection initiated`,"info")}initializeDocumentUpload(){const e=document.getElementById("resume-dropzone"),t=document.getElementById("resume-input"),n=document.getElementById("resume-preview");if(!e||!t||!n)return;e.addEventListener("dragover",(t=>{t.preventDefault(),t.stopPropagation(),e.classList.add("ca-dropzone--dragover")})),e.addEventListener("dragleave",(t=>{t.preventDefault(),t.stopPropagation(),e.classList.remove("ca-dropzone--dragover")})),e.addEventListener("drop",(t=>{t.preventDefault(),t.stopPropagation(),e.classList.remove("ca-dropzone--dragover");const n=t.dataTransfer?.files;n&&n.length>0&&this.handleFileUpload(n[0])})),e.addEventListener("click",(()=>{t.click()})),t.addEventListener("change",(e=>{const t=e.target;t.files&&t.files.length>0&&this.handleFileUpload(t.files[0])}));const o=document.getElementById("remove-resume");o&&o.addEventListener("click",(()=>{this.removeUploadedFile()}))}handleFileUpload(e){console.log("📄 File uploaded:",e.name,e.size),["application/pdf","application/vnd.openxmlformats-officedocument.wordprocessingml.document"].includes(e.type)?e.size>10485760?this.showToast("File size must be less than 10MB","error"):(this.showFilePreview(e),this.processDocument(e)):this.showToast("Please upload a PDF or DOCX file","error")}showFilePreview(e){const t=document.getElementById("resume-preview"),n=t?.querySelector(".ca-file-preview__name"),o=t?.querySelector(".ca-file-preview__size");if(t&&n&&o){n.textContent=e.name,o.textContent=`${(e.size/1024/1024).toFixed(2)} MB`,t.style.display="flex";const s=document.getElementById("resume-dropzone");s&&(s.style.display="none")}}removeUploadedFile(){const e=document.getElementById("resume-preview"),t=document.getElementById("resume-dropzone"),n=document.getElementById("resume-input");e&&(e.style.display="none"),t&&(t.style.display="flex"),n&&(n.value=""),console.log("📄 File removed")}async processDocument(e){try{console.log("📄 Processing document:",e.name),this.showToast("Document uploaded successfully!","success")}catch(e){console.error("Document processing error:",e),this.showToast("Failed to process document","error")}}initializeLLMReordering(){if(void 0===window.Sortable){const e=document.createElement("script");e.src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js",e.onload=()=>{this.setupSortable()},document.head.appendChild(e)}else this.setupSortable()}setupSortable(){const e=document.getElementById("fallback-order");e&&void 0!==window.Sortable&&(new window.Sortable(e,{animation:150,handle:".ca-drag-handle",onEnd:e=>{console.log("🔄 LLM order changed:",e.oldIndex,"->",e.newIndex),this.saveLLMFallbackOrder()}}),console.log("🔄 LLM fallback reordering initialized"))}saveLLMFallbackOrder(){const e=document.querySelectorAll(".ca-fallback-item"),t=Array.from(e).map((e=>e.dataset.provider)).filter(Boolean);console.log("💾 Saving LLM fallback order:",t),"undefined"!=typeof chrome&&chrome.storage?chrome.storage.local.set({llmFallbackOrder:t}):localStorage.setItem("llmFallbackOrder",JSON.stringify(t)),this.showToast("LLM fallback order saved!","success")}async testAPIConnections(){const e=this.getAPIKeys(),t={openai:!1,anthropic:!1,gemini:!1};this.showToast("Testing API connections...","info");try{e.openai&&(t.openai=await this.testOpenAIConnection(e.openai)),e.anthropic&&(t.anthropic=await this.testAnthropicConnection(e.anthropic)),e.gemini&&(t.gemini=await this.testGeminiConnection(e.gemini));const n=Object.values(t).filter(Boolean).length,o=Object.values(e).filter(Boolean).length;n===o&&o>0?this.showToast(`✅ All ${n} API connections successful!`,"success"):this.showToast(`⚠️ ${n}/${o} API connections successful`,"warning"),console.log("🔑 API Test Results:",t)}catch(e){console.error("API testing error:",e),this.showToast("API testing failed. Check console for details.","error")}}async testOpenAIConnection(e){try{return(await fetch("https://api.openai.com/v1/models",{headers:{Authorization:`Bearer ${e}`}})).ok}catch(e){return console.error("OpenAI test failed:",e),!1}}async testAnthropicConnection(e){try{const t=await fetch("https://api.anthropic.com/v1/messages",{method:"POST",headers:{"Content-Type":"application/json","x-api-key":e,"anthropic-version":"2023-06-01"},body:JSON.stringify({model:"claude-3-haiku-20240307",max_tokens:1,messages:[{role:"user",content:"test"}]})});return t.ok||400===t.status}catch(e){return console.error("Anthropic test failed:",e),!1}}async testGeminiConnection(e){try{return(await fetch(`https://generativelanguage.googleapis.com/v1beta/models?key=${e}`)).ok}catch(e){return console.error("Gemini test failed:",e),!1}}getAPIKeys(){const e=document.getElementById("openai-key"),t=document.getElementById("anthropic-key"),n=document.getElementById("gemini-key");return{openai:e?.value||"",anthropic:t?.value||"",gemini:n?.value||""}}collectApiKeys(){const e={},t=document.getElementById("openai-key")?.value,n=document.getElementById("anthropic-key")?.value,o=document.getElementById("gemini-key")?.value;return t&&(e.openai=t),n&&(e.anthropic=n),o&&(e.gemini=o),e}collectContextData(){const e=document.getElementById("job-description")?.value;return{jobDescription:e||"",uploadedAt:(new Date).toISOString()}}collectLlmConfig(){const e=document.getElementById("preferred-provider")?.value;return{preferredProvider:e||"openai",updatedAt:(new Date).toISOString()}}collectTranscriptionSettings(){const e=document.getElementById("transcription-language")?.value,t=document.getElementById("silence-threshold")?.value,n=document.getElementById("silence-duration")?.value;return{language:e||"en-US",silenceThreshold:parseFloat(t)||.01,silenceDuration:parseInt(n)||1500}}collectResponseStyle(){const e=document.getElementById("response-tone")?.value,t=document.getElementById("response-length")?.value,n=document.getElementById("formality-level")?.value;return{tone:e||"professional",length:t||"medium",formality:parseInt(n)||7}}collectLanguageSettings(){const e=document.getElementById("ui-language")?.value,t=document.getElementById("response-language")?.value,n=document.getElementById("date-format")?.value,o=document.getElementById("time-format")?.value;return{interface:e||"English",aiResponse:t||"English",dateFormat:n||"MM/DD/YYYY",timeFormat:o||"12-hour"}}populateApiKeys(e){const t=document.getElementById("openai-key"),n=document.getElementById("anthropic-key"),o=document.getElementById("gemini-key");t&&e.openai&&(t.value=e.openai),n&&e.anthropic&&(n.value=e.anthropic),o&&e.gemini&&(o.value=e.gemini)}populateLlmConfig(e){const t=document.getElementById("preferred-provider");t&&e.preferredProvider&&(t.value=e.preferredProvider)}populateTranscriptionSettings(e){const t=document.getElementById("transcription-language"),n=document.getElementById("silence-threshold"),o=document.getElementById("silence-duration");t&&e.language&&(t.value=e.language),n&&e.silenceThreshold&&(n.value=e.silenceThreshold.toString()),o&&e.silenceDuration&&(o.value=e.silenceDuration.toString())}populateResponseStyle(e){const t=document.getElementById("response-tone"),n=document.getElementById("response-length"),o=document.getElementById("formality-level");t&&e.tone&&(t.value=e.tone),n&&e.length&&(n.value=e.length),o&&e.formality&&(o.value=e.formality.toString())}populateLanguageSettings(e){const t=document.getElementById("ui-language"),n=document.getElementById("response-language"),o=document.getElementById("date-format"),s=document.getElementById("time-format");t&&e.interface&&(t.value=e.interface),n&&e.aiResponse&&(n.value=e.aiResponse),o&&e.dateFormat&&(o.value=e.dateFormat),s&&e.timeFormat&&(s.value=e.timeFormat)}generateStylePreview(e){return`\n      <div class="preview-card">\n        <h4>Preview Response</h4>\n        <p>This is how your AI responses will look with the selected style settings.</p>\n        <p><strong>Tone:</strong> ${e.tone||"professional"}</p>\n        <p><strong>Length:</strong> ${e.length||"medium"}</p>\n        <p><strong>Formality:</strong> ${e.formality||7}/10</p>\n      </div>\n    `}updateLoadingState(e){document.querySelectorAll("button").forEach((t=>{t.disabled=e}))}showNotification(e,t="info"){console.log(`${t.toUpperCase()}: ${e}`);const n=document.createElement("div");n.className=`notification notification--${t}`,n.textContent=e,document.body.appendChild(n),setTimeout((()=>{n.remove()}),3e3)}showToast(e,t="info"){console.log(`🍞 TOAST ${t.toUpperCase()}: ${e}`);const n=document.createElement("div");if(n.className=`toast toast--${t}`,n.innerHTML=`\n      <div class="toast__content">\n        <span class="toast__message">${e}</span>\n        <button class="toast__close" onclick="this.parentElement.parentElement.remove()">×</button>\n      </div>\n    `,!document.querySelector("#toast-styles")){const e=document.createElement("style");e.id="toast-styles",e.textContent="\n        .toast {\n          position: fixed;\n          top: 20px;\n          right: 20px;\n          background: white;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n          z-index: 10000;\n          min-width: 300px;\n          animation: slideIn 0.3s ease;\n        }\n        .toast--success { border-left: 4px solid #10b981; }\n        .toast--error { border-left: 4px solid #ef4444; }\n        .toast--warning { border-left: 4px solid #f59e0b; }\n        .toast--info { border-left: 4px solid #3b82f6; }\n        .toast__content {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 12px 16px;\n        }\n        .toast__message { flex: 1; font-size: 14px; }\n        .toast__close {\n          background: none;\n          border: none;\n          font-size: 18px;\n          cursor: pointer;\n          color: #666;\n          margin-left: 12px;\n        }\n        @keyframes slideIn {\n          from { transform: translateX(100%); opacity: 0; }\n          to { transform: translateX(0); opacity: 1; }\n        }\n      ",document.head.appendChild(e)}document.body.appendChild(n),setTimeout((()=>{n.parentElement&&n.remove()}),5e3)}initialize(){console.log("CandidAI Options page initialized")}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>{(new o).initialize()})):(new o).initialize()})();