{"version":3,"file":"content.js","mappings":"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","sources":["webpack://candidai-chrome-extension/./src/ts/utils/constants.ts","webpack://candidai-chrome-extension/webpack/bootstrap","webpack://candidai-chrome-extension/webpack/runtime/define property getters","webpack://candidai-chrome-extension/webpack/runtime/hasOwnProperty shorthand","webpack://candidai-chrome-extension/webpack/runtime/make namespace object","webpack://candidai-chrome-extension/./src/content/content.ts"],"sourcesContent":["/**\n * CandidAI Chrome Extension - Constants\n * Centralized configuration and constants for enterprise-grade development\n * Implements type-safe constants with proper categorization\n */\n\n/**\n * CandidAI Meeting Assistant - Core Constants\n * Enterprise-grade configuration management for multi-context AI assistance\n * Supports interviews, sales, meetings, reviews, and various interaction tones\n */\n\n// =============================================================================\n// TYPE DEFINITIONS\n// =============================================================================\n\nexport interface LLMPreferences {\n  preferredProvider: 'openai' | 'anthropic' | 'gemini';\n  fallbackOrder: readonly ('openai' | 'anthropic' | 'gemini')[];\n  modelPreferences: {\n    openai: string;\n    anthropic: string;\n    gemini: string;\n  };\n}\n\nexport interface UIPreferences {\n  theme: 'light' | 'dark' | 'auto';\n  fontSize: 'small' | 'medium' | 'large';\n  autoScroll: boolean;\n  language: string;\n}\n\nexport interface TranscriptionPreferences {\n  language: string;\n  useExternalStt: boolean;\n  silenceThreshold: number;\n  silenceDuration: number;\n}\n\nexport interface ResponsePreferences {\n  tone: 'professional' | 'casual' | 'formal';\n  length: 'short' | 'medium' | 'long';\n  detailLevel: 'low' | 'medium' | 'high';\n}\n\nexport interface SessionManagement {\n  autoCleanupDelayMs: number;\n  maxActiveSessions: number;\n}\n\nexport interface SpeechToTextConfig {\n  enableQuestionDetection: boolean;\n  questionDetectionMethod: 'punctuation' | 'ml_model' | 'keyword_based';\n  questionKeywords: string[];\n  enableSpeakerDiarization: boolean;\n  defaultSpeaker: 'interviewer' | 'candidate' | 'unknown';\n  confidenceThreshold: number;\n}\n\nexport interface AppConfig {\n  llmPreferences: LLMPreferences;\n  uiPreferences: UIPreferences;\n  transcriptionPreferences: TranscriptionPreferences;\n  responsePreferences: ResponsePreferences;\n  sessionManagement: SessionManagement;\n  speechToTextConfig: SpeechToTextConfig;\n}\n\nexport interface SessionMetadata {\n  platform?: string;\n  tabId?: number;\n  initiatedTs?: number;\n  uiConnected?: boolean;\n  company?: string;\n  position?: string;\n  initiatedBy?: string;\n  [key: string]: any; // Allow additional metadata fields\n}\n\nexport interface InterviewSession {\n  id: string;\n  platform: string;\n  startTime: number;\n  endTime?: number;\n  state: 'ACTIVE' | 'ENDING' | 'ENDED' | 'ERROR_ANALYSIS_FAILED' | 'PORT_DISCONNECTED';\n  transcriptions: TranscriptionEntry[];\n  suggestions: SuggestionEntry[];\n  metadata: SessionMetadata;\n  context?: any; // Context from ContextManager\n  report?: any; // Final report from PerformanceAnalyzer\n  error?: string;\n}\n\nexport interface TranscriptionEntry {\n  text: string;\n  timestamp: number;\n  confidence: number;\n  isQuestion: boolean;\n  speaker?: string;\n  suggestions?: SuggestionEntry[];\n}\n\nexport interface SuggestionEntry {\n  id?: string;\n  text: string;\n  type?: string;\n  confidence?: number;\n  timestamp: number;\n  wasUsed?: boolean;\n}\n\nexport interface TranscriptionData {\n  text: string;\n  confidence?: number;\n  isQuestion?: boolean;\n  speaker?: string;\n  timestamp?: number;\n}\n\nexport interface MessagePayload {\n  command: string;\n  payload?: any;\n}\n\nexport interface ServiceWorkerResponse {\n  success: boolean;\n  data?: any;\n  error?: string;\n  details?: string;\n}\n\nexport interface PortMessage {\n  command: string;\n  payload?: any;\n}\n\n// =============================================================================\n// MESSAGE COMMANDS\n// =============================================================================\n\nexport const MESSAGE_COMMANDS = {\n  // Session Management\n  INIT_INTERVIEW_SESSION: 'init_interview_session',\n  END_INTERVIEW_SESSION: 'end_interview_session',\n  UPDATE_CONTEXT: 'update_context',\n  GET_APP_STATE: 'get_app_state',\n\n  // Transcription\n  START_TRANSCRIPTION: 'start_transcription',\n  STOP_TRANSCRIPTION: 'stop_transcription',\n  PROCESS_TRANSCRIPTION: 'process_transcription',\n\n  // Audio Processing\n  START_AUDIO_CAPTURE: 'start_audio_capture',\n  STOP_AUDIO_CAPTURE: 'stop_audio_capture',\n  AUDIO_DATA: 'audio_data',\n\n  // Platform Detection\n  PLATFORM_DETECTED: 'platform_detected',\n  GET_PLATFORM_STATUS: 'get_platform_status',\n  VIDEO_CALL_STATE_CHANGED: 'video_call_state_changed',\n\n  // Content Script\n  EXTRACT_PAGE_CONTEXT: 'extract_page_context',\n  INJECT_UI: 'inject_ui',\n\n  // Visual Analysis\n  CAPTURE_VISUAL: 'capture_visual',\n  ANALYZE_VISUAL: 'analyze_visual',\n\n  // Document Management\n  UPLOAD_DOCUMENT: 'upload_document',\n  PROCESS_DOCUMENT: 'process_document',\n  GET_DOCUMENTS: 'get_documents',\n\n  // AI Responses\n  GET_SUGGESTION: 'get_suggestion',\n  GENERATE_RESPONSE: 'generate_response',\n\n  // Testing\n  TEST_LLM_CONNECTION: 'test_llm_connection',\n  TEST_PLATFORM_DETECTION: 'test_platform_detection',\n  PING: 'ping',\n} as const;\n\nexport type MessageCommand = typeof MESSAGE_COMMANDS[keyof typeof MESSAGE_COMMANDS];\n\n// =============================================================================\n// MESSAGE TARGETS\n// =============================================================================\n\nexport const MESSAGE_TARGETS = {\n  SERVICE_WORKER: 'service_worker',\n  CONTENT_SCRIPT: 'content_script',\n  SIDE_PANEL: 'side_panel',\n  OPTIONS_PAGE: 'options_page',\n  OFFSCREEN: 'offscreen',\n} as const;\n\n// =============================================================================\n// PORT COMMANDS\n// =============================================================================\n\nexport const PORT_COMMANDS = {\n  SERVICE_WORKER_READY: 'service_worker_ready',\n  SIDE_PANEL_READY: 'side_panel_ready',\n  CONNECTION_ESTABLISHED: 'connection_established',\n  HEARTBEAT: 'heartbeat',\n} as const;\n\n// =============================================================================\n// STORAGE KEYS\n// =============================================================================\n\nexport const STORAGE_KEYS = {\n  APP_CONFIG: 'app_config',\n  USER_PREFERENCES: 'user_preferences',\n  SESSION_DATA: 'session_data',\n  ACTIVE_INTERVIEW: 'active_interview',\n  DOCUMENT_CACHE: 'document_cache',\n  PERFORMANCE_METRICS: 'performance_metrics',\n  ERROR_LOGS: 'error_logs',\n  AUDIT_TRAIL: 'audit_trail',\n} as const;\n\nexport type StorageKey = typeof STORAGE_KEYS[keyof typeof STORAGE_KEYS];\n\n// =============================================================================\n// OFFSCREEN DOCUMENT CONFIGURATION\n// =============================================================================\n\nexport const OFFSCREEN_DOCUMENT_PATH = 'offscreen/offscreen.html';\n\nexport const OFFSCREEN_REASONS = (typeof chrome !== 'undefined' && chrome.offscreen) ? [\n  chrome.offscreen.Reason.USER_MEDIA,\n  chrome.offscreen.Reason.AUDIO_PLAYBACK,\n] : ['USER_MEDIA', 'AUDIO_PLAYBACK'] as const;\n\nexport const OFFSCREEN_JUSTIFICATION = \n  'Recording audio for AI-powered meeting assistance and transcription';\n\n// =============================================================================\n// PLATFORM CONFIGURATIONS\n// =============================================================================\n\nexport const SUPPORTED_PLATFORMS = {\n  GOOGLE_MEET: {\n    name: 'Google Meet',\n    domain: 'meet.google.com',\n    selectors: {\n      videoContainer: '[data-allocation-index]',\n      participantsList: '[data-participant-id]',\n      chatButton: '[data-tooltip*=\"chat\"]',\n      micButton: '[data-tooltip*=\"microphone\"]',\n      cameraButton: '[data-tooltip*=\"camera\"]',\n    },\n  },\n  ZOOM: {\n    name: 'Zoom',\n    domain: 'zoom.us',\n    selectors: {\n      videoContainer: '.video-container',\n      participantsList: '.participants-list',\n      chatButton: '.chat-button',\n      micButton: '.audio-button',\n      cameraButton: '.video-button',\n    },\n  },\n  MICROSOFT_TEAMS: {\n    name: 'Microsoft Teams',\n    domain: 'teams.microsoft.com',\n    selectors: {\n      videoContainer: '[data-tid=\"video-container\"]',\n      participantsList: '[data-tid=\"participants-list\"]',\n      chatButton: '[data-tid=\"chat-button\"]',\n      micButton: '[data-tid=\"microphone-button\"]',\n      cameraButton: '[data-tid=\"camera-button\"]',\n    },\n  },\n  LINKEDIN: {\n    name: 'LinkedIn',\n    domain: 'linkedin.com',\n    selectors: {\n      interviewContainer: '.interview-container',\n      questionText: '.question-text',\n      answerInput: '.answer-input',\n      submitButton: '.submit-button',\n    },\n  },\n  HIREVUE: {\n    name: 'HireVue',\n    domain: 'hirevue.com',\n    selectors: {\n      questionContainer: '.question-container',\n      videoPlayer: '.video-player',\n      recordButton: '.record-button',\n      submitButton: '.submit-button',\n    },\n  },\n} as const;\n\n// =============================================================================\n// LLM PROVIDER CONFIGURATIONS\n// =============================================================================\n\nexport const LLM_PROVIDERS = {\n  OPENAI: {\n    name: 'OpenAI',\n    baseUrl: 'https://api.openai.com/v1',\n    models: ['gpt-4', 'gpt-4-turbo', 'gpt-3.5-turbo'],\n    maxTokens: 4096,\n    rateLimits: {\n      requestsPerMinute: 60,\n      tokensPerMinute: 90000,\n      dailyLimit: 1000000,\n    },\n  },\n  ANTHROPIC: {\n    name: 'Anthropic',\n    baseUrl: 'https://api.anthropic.com/v1',\n    models: ['claude-3-opus', 'claude-3-sonnet', 'claude-3-haiku'],\n    maxTokens: 4096,\n    rateLimits: {\n      requestsPerMinute: 50,\n      tokensPerMinute: 40000,\n      dailyLimit: 500000,\n    },\n  },\n  GOOGLE: {\n    name: 'Google',\n    baseUrl: 'https://generativelanguage.googleapis.com/v1',\n    models: ['gemini-pro', 'gemini-pro-vision'],\n    maxTokens: 2048,\n    rateLimits: {\n      requestsPerMinute: 60,\n      tokensPerMinute: 32000,\n      dailyLimit: 1000000,\n    },\n  },\n} as const;\n\n// =============================================================================\n// DEFAULT CONFIGURATION\n// =============================================================================\n\nexport const DEFAULT_APP_CONFIG = {\n  version: '1.0.0',\n  environment: 'production' as const,\n  features: {\n    enableTranscription: true,\n    enableAIResponses: true,\n    enableDocumentAnalysis: true,\n    enableVisualAnalysis: true,\n    enablePerformanceTracking: true,\n    enableDebugMode: false,\n  },\n  llmProviders: [\n    {\n      name: 'OpenAI',\n      apiKey: '',\n      baseUrl: LLM_PROVIDERS.OPENAI.baseUrl,\n      model: 'gpt-4',\n      maxTokens: 2048,\n      temperature: 0.7,\n      isEnabled: false,\n      priority: 1,\n      rateLimits: LLM_PROVIDERS.OPENAI.rateLimits,\n    },\n    {\n      name: 'Anthropic',\n      apiKey: '',\n      baseUrl: LLM_PROVIDERS.ANTHROPIC.baseUrl,\n      model: 'claude-3-sonnet',\n      maxTokens: 2048,\n      temperature: 0.7,\n      isEnabled: false,\n      priority: 2,\n      rateLimits: LLM_PROVIDERS.ANTHROPIC.rateLimits,\n    },\n  ],\n  ui: {\n    theme: 'auto' as const,\n    language: 'en',\n    fontSize: 'medium' as const,\n    animations: true,\n    notifications: true,\n  },\n  security: {\n    encryptStorage: true,\n    validateInputs: true,\n    rateLimiting: true,\n    auditLogging: true,\n    csrfProtection: true,\n  },\n  performance: {\n    enableMetrics: true,\n    sampleRate: 0.1,\n    maxHistorySize: 1000,\n    alertThresholds: {\n      responseTime: 5000,\n      errorRate: 0.05,\n      memoryUsage: 100 * 1024 * 1024, // 100MB\n    },\n  },\n} as const;\n\n// =============================================================================\n// AUDIO CONFIGURATION\n// =============================================================================\n\nexport const AUDIO_CONFIG = {\n  SAMPLE_RATE: 16000,\n  CHANNELS: 1,\n  BIT_DEPTH: 16,\n  BUFFER_SIZE: 4096,\n  SILENCE_THRESHOLD: 0.01,\n  SILENCE_DURATION: 1000, // ms\n  MAX_RECORDING_DURATION: 300000, // 5 minutes\n} as const;\n\n// =============================================================================\n// UI CONSTANTS\n// =============================================================================\n\nexport const UI_CONSTANTS = {\n  ANIMATION_DURATION: 300,\n  DEBOUNCE_DELAY: 500,\n  TOAST_DURATION: 5000,\n  MAX_SUGGESTIONS: 5,\n  MAX_CONVERSATION_HISTORY: 100,\n  SCROLL_THRESHOLD: 100,\n} as const;\n\n// =============================================================================\n// ERROR CODES\n// =============================================================================\n\nexport const ERROR_CODES = {\n  // General\n  UNKNOWN_ERROR: 'UNKNOWN_ERROR',\n  INITIALIZATION_FAILED: 'INITIALIZATION_FAILED',\n  CONFIGURATION_ERROR: 'CONFIGURATION_ERROR',\n\n  // Authentication\n  API_KEY_MISSING: 'API_KEY_MISSING',\n  API_KEY_INVALID: 'API_KEY_INVALID',\n  AUTHENTICATION_FAILED: 'AUTHENTICATION_FAILED',\n\n  // Network\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  TIMEOUT_ERROR: 'TIMEOUT_ERROR',\n  RATE_LIMIT_EXCEEDED: 'RATE_LIMIT_EXCEEDED',\n\n  // Audio\n  AUDIO_PERMISSION_DENIED: 'AUDIO_PERMISSION_DENIED',\n  AUDIO_DEVICE_ERROR: 'AUDIO_DEVICE_ERROR',\n  TRANSCRIPTION_FAILED: 'TRANSCRIPTION_FAILED',\n\n  // Platform\n  PLATFORM_NOT_SUPPORTED: 'PLATFORM_NOT_SUPPORTED',\n  PLATFORM_DETECTION_FAILED: 'PLATFORM_DETECTION_FAILED',\n\n  // Document\n  DOCUMENT_UPLOAD_FAILED: 'DOCUMENT_UPLOAD_FAILED',\n  DOCUMENT_PROCESSING_FAILED: 'DOCUMENT_PROCESSING_FAILED',\n  DOCUMENT_TOO_LARGE: 'DOCUMENT_TOO_LARGE',\n\n  // Storage\n  STORAGE_QUOTA_EXCEEDED: 'STORAGE_QUOTA_EXCEEDED',\n  STORAGE_ACCESS_DENIED: 'STORAGE_ACCESS_DENIED',\n} as const;\n\n// =============================================================================\n// PERFORMANCE THRESHOLDS\n// =============================================================================\n\nexport const PERFORMANCE_THRESHOLDS = {\n  RESPONSE_TIME_WARNING: 2000, // ms\n  RESPONSE_TIME_ERROR: 5000, // ms\n  MEMORY_WARNING: 50 * 1024 * 1024, // 50MB\n  MEMORY_ERROR: 100 * 1024 * 1024, // 100MB\n  ERROR_RATE_WARNING: 0.02, // 2%\n  ERROR_RATE_ERROR: 0.05, // 5%\n} as const;\n\n// =============================================================================\n// SECURITY CONSTANTS\n// =============================================================================\n\nexport const SECURITY_CONSTANTS = {\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_FILE_TYPES: ['pdf', 'docx', 'txt', 'md'],\n  MAX_API_KEY_LENGTH: 256,\n  MIN_PASSWORD_LENGTH: 8,\n  SESSION_TIMEOUT: 24 * 60 * 60 * 1000, // 24 hours\n  ENCRYPTION_ALGORITHM: 'AES-GCM',\n} as const;\n\n// =============================================================================\n// UI CONFIGURATION CONSTANTS\n// =============================================================================\n\nexport const CALL_TYPES = {\n  INTERVIEW: 'interview',\n  MEETING: 'meeting', \n  PRESENTATION: 'presentation',\n  TRAINING: 'training',\n} as const;\n\nexport const TONE_TYPES = {\n  PROFESSIONAL: 'professional',\n  CASUAL: 'casual',\n  FORMAL: 'formal',\n  FRIENDLY: 'friendly',\n} as const;\n\nexport const CALL_TYPE_CONFIGS = {\n  [CALL_TYPES.INTERVIEW]: {\n    name: 'Interview',\n    description: 'One-on-one interview session',\n    suggestedTone: TONE_TYPES.PROFESSIONAL,\n    features: ['transcription', 'suggestions', 'document_analysis'],\n  },\n  [CALL_TYPES.MEETING]: {\n    name: 'Meeting',\n    description: 'Team meeting or group discussion',\n    suggestedTone: TONE_TYPES.PROFESSIONAL,\n    features: ['transcription', 'action_items', 'summary'],\n  },\n  [CALL_TYPES.PRESENTATION]: {\n    name: 'Presentation',\n    description: 'Presentation or demo session',\n    suggestedTone: TONE_TYPES.FORMAL,\n    features: ['visual_analysis', 'audience_feedback'],\n  },\n  [CALL_TYPES.TRAINING]: {\n    name: 'Training',\n    description: 'Training or educational session',\n    suggestedTone: TONE_TYPES.FRIENDLY,\n    features: ['knowledge_base', 'q_and_a'],\n  },\n} as const;\n\nexport const TONE_CONFIGS = {\n  [TONE_TYPES.PROFESSIONAL]: {\n    name: 'Professional',\n    description: 'Formal business communication',\n    style: 'structured',\n    vocabulary: 'business',\n  },\n  [TONE_TYPES.CASUAL]: {\n    name: 'Casual',\n    description: 'Relaxed conversational style',\n    style: 'informal',\n    vocabulary: 'everyday',\n  },\n  [TONE_TYPES.FORMAL]: {\n    name: 'Formal',\n    description: 'Academic or official communication',\n    style: 'precise',\n    vocabulary: 'formal',\n  },\n  [TONE_TYPES.FRIENDLY]: {\n    name: 'Friendly',\n    description: 'Warm and approachable communication',\n    style: 'conversational',\n    vocabulary: 'accessible',\n  },\n} as const;\n\n// =============================================================================\n// DOCUMENT MANAGEMENT CONSTANTS\n// =============================================================================\n\nexport const MAX_DOCUMENTS = 10;\n\nexport const SUPPORTED_DOCUMENT_FORMATS = [\n  'pdf',\n  'docx',\n  'txt',\n  'md',\n  'doc',\n  'rtf',\n] as const;\n\n// =============================================================================\n// DOCUMENT PROCESSING CONSTANTS\n// =============================================================================\n\nexport const MAX_DOCUMENT_SIZE = 10 * 1024 * 1024; // 10MB\n\nexport const DOCUMENT_TYPES = {\n  RESUME: 'resume',\n  JOB_DESCRIPTION: 'job_description',\n  COVER_LETTER: 'cover_letter',\n  PORTFOLIO: 'portfolio',\n  REFERENCE: 'reference',\n  OTHER: 'other',\n} as const;\n\nexport const PRIORITY_LEVELS = {\n  LOW: 1,\n  MEDIUM: 2,\n  HIGH: 3,\n  URGENT: 4,\n  CRITICAL: 5,\n} as const;\n\nexport const DOCUMENT_PROCESSING_CONFIG = {\n  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB\n  ALLOWED_MIME_TYPES: [\n    'application/pdf',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/msword',\n    'text/plain',\n    'text/markdown',\n    'application/rtf',\n  ],\n  PROCESSING_TIMEOUT: 30000, // 30 seconds\n} as const;\n\n// =============================================================================\n// TYPE EXPORTS\n// =============================================================================\n\nexport type MessageTarget = typeof MESSAGE_TARGETS[keyof typeof MESSAGE_TARGETS];\nexport type PortCommand = typeof PORT_COMMANDS[keyof typeof PORT_COMMANDS];\nexport type ErrorCode = typeof ERROR_CODES[keyof typeof ERROR_CODES];\nexport type SupportedPlatform = keyof typeof SUPPORTED_PLATFORMS;\nexport type CallTypeKey = keyof typeof CALL_TYPES;\nexport type ToneTypeKey = keyof typeof TONE_TYPES;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Content Script - Platform detection and integration layer\n * Implements Adapter pattern for multi-platform support\n * Provides seamless integration with video conferencing platforms\n * Enterprise-grade TypeScript implementation with strict typing\n */\n\nimport type {\n  PlatformDetection,\n  MessageRequest,\n  MessageResponse,\n  SessionMetadata,\n} from '../ts/types/index';\n\n// Temporarily comment out platform adapters for testing\n// import { GoogleMeetAdapter } from '../ts/platforms/GoogleMeet';\n// import { ZoomAdapter } from '../ts/platforms/Zoom';\n// import { TeamsAdapter } from '../ts/platforms/MicrosoftTeams';\n// import { LinkedInAdapter } from '../ts/platforms/LinkedIn';\n// import { HireVueAdapter } from '../ts/platforms/HireVue';\nimport { MESSAGE_COMMANDS } from '../ts/utils/constants';\n\n/**\n * Platform Adapter Interface\n * Defines the contract that all platform adapters must implement\n */\ninterface IPlatformAdapter {\n  initialize(): Promise<void>;\n  isInVideoCall(): Promise<boolean>;\n  extractMetadata(): Promise<Partial<SessionMetadata>>;\n  onVideoCallStateChange(callback: (inCall: boolean) => void): void;\n  handleMutations?(mutations: MutationRecord[]): void;\n  cleanup(): void;\n}\n\n/**\n * Platform Adapter Constructor Type\n */\ntype PlatformAdapterConstructor = new () => IPlatformAdapter;\n\n/**\n * Detection State Interface\n */\ninterface DetectionState {\n  platform: string | null;\n  isVideoCall: boolean;\n  metadata: Partial<SessionMetadata>;\n}\n\n/**\n * PlatformDetector - Implements platform detection and initialization\n * Uses Strategy pattern for platform-specific behaviors\n */\nclass PlatformDetector {\n  private readonly adapters = new Map<string, PlatformAdapterConstructor>([\n    // Temporarily disabled for testing\n    // ['meet.google.com', GoogleMeetAdapter],\n    // ['zoom.us', ZoomAdapter],\n    // ['teams.microsoft.com', TeamsAdapter],\n    // ['linkedin.com', LinkedInAdapter],\n    // ['hirevue.com', HireVueAdapter],\n  ]);\n\n  private currentAdapter: IPlatformAdapter | null = null;\n  private mutationObserver: MutationObserver | null = null;\n\n  private detectionState: DetectionState = {\n    platform: null,\n    isVideoCall: false,\n    metadata: {},\n  };\n\n  constructor() {\n    this.initialize().catch((error) => {\n      console.error('PlatformDetector initialization failed:', error);\n    });\n  }\n\n  /**\n   * Initialize platform detection and monitoring\n   * Implements Observer pattern for DOM mutations\n   */\n  private async initialize(): Promise<void> {\n    console.log('CandidAI Content Script initializing...');\n\n    try {\n      // Detect current platform\n      const platform = this.detectPlatform();\n\n      if (platform) {\n        console.log(`Detected platform: ${platform}`);\n        await this.initializePlatformAdapter(platform);\n      }\n\n      // Monitor for dynamic platform changes\n      this.observeDOMChanges();\n\n      // Listen for extension messages\n      this.initializeMessageListener();\n\n      // Monitor URL changes for SPA navigation\n      this.monitorURLChanges();\n    } catch (error) {\n      console.error('PlatformDetector initialization error:', error);\n    }\n  }\n\n  /**\n   * Detect current platform based on URL\n   * Implements platform identification logic with type safety\n   */\n  private detectPlatform(): string | null {\n    const hostname = window.location.hostname;\n\n    for (const [domain] of this.adapters) {\n      if (hostname.includes(domain)) {\n        return domain;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Initialize platform-specific adapter\n   * Implements Factory pattern for adapter creation with error handling\n   */\n  private async initializePlatformAdapter(platform: string): Promise<void> {\n    const AdapterClass = this.adapters.get(platform);\n\n    if (!AdapterClass) {\n      console.error(`No adapter found for platform: ${platform}`);\n      return;\n    }\n\n    try {\n      // Clean up existing adapter\n      if (this.currentAdapter) {\n        this.currentAdapter.cleanup();\n      }\n\n      // Create new adapter instance\n      this.currentAdapter = new AdapterClass();\n\n      // Initialize adapter\n      await this.currentAdapter.initialize();\n\n      // Check if in video call\n      this.detectionState.isVideoCall = await this.currentAdapter.isInVideoCall();\n      this.detectionState.platform = platform;\n\n      // Extract metadata\n      this.detectionState.metadata = await this.currentAdapter.extractMetadata();\n\n      // Notify extension of platform detection\n      await this.notifyPlatformDetected();\n\n      // Set up video call monitoring\n      this.currentAdapter.onVideoCallStateChange((inCall: boolean) => {\n        this.handleVideoCallStateChange(inCall).catch((error) => {\n          console.error('Error handling video call state change:', error);\n        });\n      });\n\n      console.log('Platform adapter initialized successfully:', platform);\n    } catch (error) {\n      console.error('Failed to initialize platform adapter:', error);\n      this.currentAdapter = null;\n    }\n  }\n\n  /**\n   * Monitor DOM for platform-specific changes\n   * Implements MutationObserver for reactive updates with performance optimization\n   */\n  private observeDOMChanges(): void {\n    // Clean up existing observer\n    if (this.mutationObserver) {\n      this.mutationObserver.disconnect();\n    }\n\n    this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\n      try {\n        // Check if platform UI has loaded\n        if (!this.currentAdapter && this.detectPlatform()) {\n          this.initialize().catch((error) => {\n            console.error('Re-initialization failed:', error);\n          });\n          return;\n        }\n\n        // Let adapter handle mutations if needed\n        if (this.currentAdapter?.handleMutations) {\n          this.currentAdapter.handleMutations(mutations);\n        }\n      } catch (error) {\n        console.error('Error in mutation observer:', error);\n      }\n    });\n\n    // Observe with configuration optimized for performance\n    this.mutationObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['class', 'data-meeting-id', 'data-call-id'],\n    });\n  }\n\n  /**\n   * Monitor URL changes for SPA navigation\n   * Implements history API interception with proper typing\n   */\n  private monitorURLChanges(): void {\n    let lastUrl = location.href;\n\n    // Store original methods with proper typing\n    const originalPushState = history.pushState.bind(history);\n    const originalReplaceState = history.replaceState.bind(history);\n\n    // Override pushState and replaceState\n    history.pushState = function (\n      data: any,\n      unused: string,\n      url?: string | URL | null,\n    ): void {\n      originalPushState(data, unused, url);\n      window.dispatchEvent(new Event('urlchange'));\n    };\n\n    history.replaceState = function (\n      data: any,\n      unused: string,\n      url?: string | URL | null,\n    ): void {\n      originalReplaceState(data, unused, url);\n      window.dispatchEvent(new Event('urlchange'));\n    };\n\n    // Listen for URL changes\n    const handleUrlChange = (): void => {\n      if (location.href !== lastUrl) {\n        lastUrl = location.href;\n        this.handleURLChange().catch((error) => {\n          console.error('Error handling URL change:', error);\n        });\n      }\n    };\n\n    window.addEventListener('urlchange', handleUrlChange);\n    window.addEventListener('popstate', handleUrlChange);\n  }\n\n  /**\n   * Handle URL changes in SPA\n   * Re-initializes adapter if platform changes with proper error handling\n   */\n  private async handleURLChange(): Promise<void> {\n    try {\n      const newPlatform = this.detectPlatform();\n\n      if (newPlatform !== this.detectionState.platform) {\n        console.log('Platform changed, reinitializing...');\n        \n        // Platform changed, reinitialize\n        if (this.currentAdapter) {\n          this.currentAdapter.cleanup();\n          this.currentAdapter = null;\n        }\n\n        if (newPlatform) {\n          await this.initializePlatformAdapter(newPlatform);\n        } else {\n          // Reset state if no platform detected\n          this.detectionState = {\n            platform: null,\n            isVideoCall: false,\n            metadata: {},\n          };\n        }\n      }\n    } catch (error) {\n      console.error('Error handling URL change:', error);\n    }\n  }\n\n  /**\n   * Initialize message listener for communication with extension\n   * Implements typed message handling\n   */\n  private initializeMessageListener(): void {\n    chrome.runtime.onMessage.addListener(\n      (\n        request: MessageRequest,\n        sender: chrome.runtime.MessageSender,\n        sendResponse: (response: MessageResponse) => void,\n      ): boolean => {\n        this.handleMessage(request, sender, sendResponse).catch((error) => {\n          console.error('Error handling message:', error);\n          sendResponse({\n            success: false,\n            error: error instanceof Error ? error.message : 'Unknown error',\n          });\n        });\n\n        return true; // Keep message channel open for async response\n      },\n    );\n  }\n\n  /**\n   * Handle messages from extension with proper error handling\n   */\n  private async handleMessage(\n    request: MessageRequest,\n    sender: chrome.runtime.MessageSender,\n    sendResponse: (response: MessageResponse) => void,\n  ): Promise<void> {\n    const { command, payload } = request;\n\n    try {\n      switch (command) {\n        case MESSAGE_COMMANDS.GET_PLATFORM_STATUS:\n          sendResponse({\n            success: true,\n            data: {\n              platform: this.detectionState.platform,\n              isVideoCall: this.detectionState.isVideoCall,\n              metadata: this.detectionState.metadata,\n            },\n          });\n          break;\n\n        case MESSAGE_COMMANDS.EXTRACT_PAGE_CONTEXT:\n          const context = await this.extractPageContext();\n          sendResponse({ success: true, data: context });\n          break;\n\n        case MESSAGE_COMMANDS.INJECT_UI:\n          await this.injectUI(payload?.config);\n          sendResponse({ success: true });\n          break;\n\n        default:\n          console.warn('Unknown command received in content script:', command);\n          sendResponse({\n            success: false,\n            error: 'Unknown command',\n            details: `Command not recognized: ${command}`,\n          });\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      console.error(`Error handling command ${command}:`, error);\n      sendResponse({\n        success: false,\n        error: errorMessage,\n      });\n    }\n  }\n\n  /**\n   * Notify extension of platform detection\n   */\n  private async notifyPlatformDetected(): Promise<void> {\n    try {\n      await chrome.runtime.sendMessage({\n        command: MESSAGE_COMMANDS.PLATFORM_DETECTED,\n        payload: {\n          platform: this.detectionState.platform,\n          isVideoCall: this.detectionState.isVideoCall,\n          metadata: this.detectionState.metadata,\n          url: window.location.href,\n          timestamp: Date.now(),\n        },\n      });\n    } catch (error) {\n      console.error('Failed to notify platform detection:', error);\n    }\n  }\n\n  /**\n   * Handle video call state changes\n   */\n  private async handleVideoCallStateChange(inCall: boolean): Promise<void> {\n    try {\n      this.detectionState.isVideoCall = inCall;\n\n      await chrome.runtime.sendMessage({\n        command: MESSAGE_COMMANDS.VIDEO_CALL_STATE_CHANGED,\n        payload: {\n          inCall,\n          platform: this.detectionState.platform,\n          metadata: this.detectionState.metadata,\n          timestamp: Date.now(),\n        },\n      });\n\n      console.log(`Video call state changed: ${inCall ? 'started' : 'ended'}`);\n    } catch (error) {\n      console.error('Failed to notify video call state change:', error);\n    }\n  }\n\n  /**\n   * Extract page context for AI processing\n   */\n  private async extractPageContext(): Promise<Record<string, unknown>> {\n    try {\n      const context: Record<string, unknown> = {\n        url: window.location.href,\n        title: document.title,\n        platform: this.detectionState.platform,\n        timestamp: Date.now(),\n      };\n\n      // Let platform adapter extract additional context\n      if (this.currentAdapter) {\n        const platformMetadata = await this.currentAdapter.extractMetadata();\n        Object.assign(context, platformMetadata);\n      }\n\n      return context;\n    } catch (error) {\n      console.error('Failed to extract page context:', error);\n      return {\n        url: window.location.href,\n        title: document.title,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Inject UI elements as needed\n   */\n  private async injectUI(config?: Record<string, unknown>): Promise<void> {\n    try {\n      console.log('Injecting UI with config:', config);\n      // Implementation for UI injection\n      // This would depend on the specific UI requirements\n    } catch (error) {\n      console.error('Failed to inject UI:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Cleanup resources when content script is unloaded\n   */\n  public cleanup(): void {\n    try {\n      if (this.mutationObserver) {\n        this.mutationObserver.disconnect();\n        this.mutationObserver = null;\n      }\n\n      if (this.currentAdapter) {\n        this.currentAdapter.cleanup();\n        this.currentAdapter = null;\n      }\n\n      console.log('PlatformDetector cleanup completed');\n    } catch (error) {\n      console.error('Error during cleanup:', error);\n    }\n  }\n}\n\n// Initialize the platform detector\nconst platformDetector = new PlatformDetector();\n\n// Cleanup on page unload\nwindow.addEventListener('beforeunload', () => {\n  platformDetector.cleanup();\n});\n\n// Export for potential testing or external access\nexport { PlatformDetector }; "],"names":[],"sourceRoot":""}